version: '3.7'

services:
    nginx:
        build: ./nginx
        container_name: nginx_container
        restart: unless-stopped
        ports:
            - 443:443
        depends_on:
            - backend
            - frontend

    backend:
        build:
            context: ./backend/
            dockerfile: ./docker/dev/Dockerfile
        container_name: backend_container
        volumes:
            - ./backend/src:/usr/src/app/src
            - ./backend/migrations:/usr/src/app/migrations
        ports:
            - 8080:8080
        depends_on:
            - postgres
        restart: unless-stopped

    frontend:
        build:
            context: ./frontend/
            dockerfile: ./docker/dev/Dockerfile
        container_name: frontend_container
        volumes:
            - ./frontend/src:/usr/src/app/src
        ports:
            - 4000:4000
        restart: unless-stopped

    postgres:
        container_name: postgres_container
        image: postgres
        environment:
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: postgres
            PGDATA: /data/postgres
        volumes:
            - postgres:/data/postgres
        command: -p 5431
        ports:
            - 5431:5432
        restart: unless-stopped

    pgadmin:
        container_name: pgadmin_container
        image: dpage/pgadmin4
        environment:
            PGADMIN_DEFAULT_EMAIL: pgadmin4@pgadmin.org
            PGADMIN_DEFAULT_PASSWORD: admin
        volumes:
            - pgadmin:/root/.pgadmin
        ports:
            - 5050:80
        restart: unless-stopped

volumes:
    postgres:
    pgadmin:
