version: "3.7"

services:
  nginx:
    build: ./nginx
    container_name: nginx_container
    volumes:
      - ./nginx/static:/usr/src/
    ports:
      - 80:80
    restart: unless-stopped
    depends_on:
      - backend
      - frontend

  backend:
    build:
      context: ./backend/
      dockerfile: ./docker/dev/Dockerfile
    container_name: backend_container
    volumes:
      - ./backend/src:/usr/src/app/src
      - ./backend/migrations:/usr/src/app/migrations
      - ./backend/config:/usr/src/app/config
      - ./backend/uploads:/usr/src/app/uploads
    ports:
      - 8080:8080
    depends_on:
      - postgres
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend/
      dockerfile: ./docker/dev/Dockerfile
    container_name: frontend_container
    volumes:
      - ./frontend/src:/usr/src/app/src
    ports:
      - 4000:4000
    restart: unless-stopped

  postgres:
    container_name: postgres_container
    image: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      PGDATA: /data/postgres
    volumes:
      - postgres:/data/postgres
    ports:
      - 5432:5432
    restart: unless-stopped

  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: pgadmin4@pgadmin.org
      PGADMIN_DEFAULT_PASSWORD: admin
    volumes:
      - pgadmin:/root/.pgadmin
    ports:
      - 5050:80
    restart: unless-stopped

volumes:
  postgres:
  pgadmin:
